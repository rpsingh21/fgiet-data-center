version: "3"

services:
  db:
    image: postgres:11-alpine
    volumes:
      - database_data:/var/lib/postgresql/data
    networks:
      - fgiet-network
  api:
    build: api/.
    restart: always
    env_file:
      - django-env.env
    command: bash -c "python manage.py makemigrations &&
      python manage.py migrate &&
      gunicorn api.wsgi:application -b 0.0.0.0:8001 --workers 3"
    volumes:
      - ./api:/code
    ports:
      - "8001:8000"
    depends_on:
      - db
    networks:
      - fgiet-network
  # webserver:
  #   image: nginx:mainline-alpine
  #   container_name: webserver
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - web-root:/var/www/html
  #     - ./nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf
  #   depends_on:
  #     - api
  #   networks:
  #     - fgiet-network

volumes:
  certbot-etc:
  certbot-var:
  database_data:
    driver: local
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /home/rpsingh/workspace/fgiet-data-center/app/dist/app
      o: bind

networks:
  fgiet-network:
    driver: bridge
